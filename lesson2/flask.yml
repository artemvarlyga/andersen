- hosts: all

  vars:
    LOCAL_PROJECT_HOME: "./lab2"
    PROJECT_HOME: "/home/dda/andersen"
    MAIN_PY: "simple_flask_lab.py"
    PORT: 8080

  tasks:

  - name: Create remote directory
    file: path={{PROJECT_HOME}} state=directory

  - name: Copy code to website server
    copy: src={{item}} dest={{PROJECT_HOME}}
    with_fileglob:
     - "{{LOCAL_PROJECT_HOME}}/*"

  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes
    become: yes
  
  - name: Install extra packages
    apt:
      name: lsof 
      state: latest
    become: yes

  - name: Install pip
    apt: 
      name: python-pip
      state: latest
    become: yes
  
  - name: Install py3-venv
    apt:
      name: python3-venv
      state: latest
    become: yes

  - name: Install virtualenv
    pip: 
      name: virtualenv
    
  - name: Create virtualenv for project
    pip: 
      virtualenv: "{{ PROJECT_HOME }}/venv"
      virtualenv_command: /usr/bin/python3 -m venv
      name: flask_lab
  
  - name: Install setuptools in the virtualenv
    pip: 
      name: setuptools
      virtualenv: "{{ PROJECT_HOME }}/venv"

  - name: Install Flask in the virtualenv
    pip: 
      name: flask 
      virtualenv: "{{ PROJECT_HOME }}/venv"
  
  - name: Get process id running the webserver
    shell: lsof -t -i:{{PORT}}
    become: yes
    ignore_errors: yes
    register: pid

  - name: Kill website if it's already running
    shell: kill {{pid.stdout}}
    when: pid.stdout != ""

  - name: Launch flask website via virtualenv
    become: no
    shell: "source {{ PROJECT_HOME }}/venv/bin/activate && nohup python {{PROJECT_HOME}}/{{MAIN_PY}} {{PORT}} 2>&1 >/dev/null &"
    args:
      executable: /bin/bash

  - name: Wait for website port to become available
    wait_for: port={{PORT}} delay=1
